// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type GrantTypes string

const (
	GrantTypesCode              GrantTypes = "code"
	GrantTypesRefreshToken      GrantTypes = "refresh_token"
	GrantTypesClientCredentials GrantTypes = "client_credentials"
	GrantTypesDeviceCode        GrantTypes = "device_code"
	GrantTypesPkce              GrantTypes = "pkce"
)

func (e *GrantTypes) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GrantTypes(s)
	case string:
		*e = GrantTypes(s)
	default:
		return fmt.Errorf("unsupported scan type for GrantTypes: %T", src)
	}
	return nil
}

type NullGrantTypes struct {
	GrantTypes GrantTypes
	Valid      bool // Valid is true if GrantTypes is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGrantTypes) Scan(value interface{}) error {
	if value == nil {
		ns.GrantTypes, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GrantTypes.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGrantTypes) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GrantTypes), nil
}

func (e GrantTypes) Valid() bool {
	switch e {
	case GrantTypesCode,
		GrantTypesRefreshToken,
		GrantTypesClientCredentials,
		GrantTypesDeviceCode,
		GrantTypesPkce:
		return true
	}
	return false
}

func AllGrantTypesValues() []GrantTypes {
	return []GrantTypes{
		GrantTypesCode,
		GrantTypesRefreshToken,
		GrantTypesClientCredentials,
		GrantTypesDeviceCode,
		GrantTypesPkce,
	}
}

type OauthClient struct {
	ID                      uuid.UUID
	CreatedAt               time.Time
	UpdatedAt               time.Time
	ClientID                string
	ClientSecretHash        sql.NullString
	Name                    string
	Description             sql.NullString
	RedirectUris            []string
	GrantTypes              []GrantTypes
	IsPublic                sql.NullBool
	TokenEndpointAuthMethod sql.NullString
}

type OauthClientsScope struct {
	OauthClientID uuid.UUID
	ScopeID       uuid.UUID
}

type Role struct {
	ID          uuid.UUID
	CreatedAt   time.Time
	UpdatedAt   time.Time
	Name        string
	Description sql.NullString
}

type RolesScope struct {
	RoleID  uuid.UUID
	ScopeID uuid.UUID
}

type Scope struct {
	ID          uuid.UUID
	Name        string
	CreatedAt   time.Time
	UpdatedAt   time.Time
	Description sql.NullString
}

type User struct {
	ID           uuid.UUID
	CreatedAt    time.Time
	UpdatedAt    time.Time
	Email        string
	PasswordHash string
	FirstName    sql.NullString
	LastName     sql.NullString
}

type UsersRole struct {
	UserID uuid.UUID
	RoleID uuid.UUID
}
